# name: faizar-dev
# faizar-dev:
#   component: '@sls-next/serverless-component@latest'
#   inputs:
#     bucketName: faizarbucket
#     description: "Lambda@Edge for cube-burst"
#     bucketRegion: ap-southeast-1
#     cloudfront:
#       distributionId: "E1ZKS6YZHIQHRK"
#     name:
#       defaultLambda: faizar-lambda
#       apiLambda: faizar-lambda
#       imageLambda: faizar-lambda
#     build:
#       env:
#         AWS_ACCESS_KEY_ID: ${env.AWS_ACCESS_KEY_ID}
#         AWS_SECRET_ACCESS_KEY: ${env.AWS_SECRET_ACCESS_KEY}

#     publicDirectoryCache: true
#     useServerlessTraceTarget: true
#     timeout: 30
#   plugins:
#     - serverless-offline
#     - serverless-domain-manager
#     - serverless-webpack
#     - serverless-webpack-prisma
#   package:
#     patterns:
#       - '!node_modules/.prisma/client/libquery_engine-*'
#       - 'node_modules/.prisma/client/libquery_engine-rhel-*'
#       - '!node_modules/prisma/libquery_engine-*'
#       - '!node_modules/@prisma/engines/**'
#   custom:
#     webpack:
#       includeModules: true
#       packagerOptions:
#         scripts:

service: serverless-zombocom
plugins:
  - serverless-s3-sync

provider:
  name: aws
  runtime: nodejs6.10

build:
  env:
    AWS_ACCESS_KEY_ID: ${env.AWS_ACCESS_KEY_ID}
    AWS_SECRET_ACCESS_KEY: ${env.AWS_SECRET_ACCESS_KEY}

resources:
  Resources:
    StaticSite:
      Type: AWS::S3::Bucket
      Properties:
        AccessControl: PublicRead
        BucketName: ${self:custom.siteName}
        WebsiteConfiguration:
          IndexDocument: ./out/index.html

custom:
  s3Sync:
    - bucketName: faizarbucket
      localDir: static

StaticSiteS3BucketPolicy:
  Type: AWS::S3::BucketPolicy
  Properties:
    Bucket:
      Ref: StaticSite
    PolicyDocument:
      Statement:
        - Sid: PublicReadGetObject
          Effect: Allow
          Principal: "*"
          Action:
          - s3:GetObject
          Resource:
            Fn::Join: [
              "", [
                "arn:aws:s3:::",
                {
                  "Ref": "StaticSite"
                },
                "/*"
              ]
            ]

    # DnsRecord:
    #   Type: "AWS::Route53::RecordSet"
    #   Properties:
    #     AliasTarget:
    #       DNSName: ${self:custom.aliasDNSName}
    #       HostedZoneId: ${self:custom.aliasHostedZoneId}
    #     HostedZoneName: ${self:custom.siteName}.
    #     Name:
    #       Ref: StaticSite
    #     Type: 'A'
